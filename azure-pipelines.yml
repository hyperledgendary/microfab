#
# SPDX-License-Identifier: Apache-2.0
#
---
schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - master
    always: true
trigger:
  branches:
    include:
      - "*"
    exclude:
      - gh-pages
  tags:
    include:
      - "*"
pool:
  vmImage: "ubuntu-latest"
steps:
  - script: sudo apt-get update && sudo apt-get install -y shellcheck
    displayName: Install Ubuntu dependencies
  - task: GoTool@0
    inputs:
      version: "1.14"
    displayName: Use Go 1.14
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: x64
      jdkSourceOption: PreInstalled
      cleanDestinationDirectory: false
    displayName: Use Java 11
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: Use Node.js 12
  - script: |
      set -euo pipefail
      sudo mkdir -p /opt/fabric
      curl -sSL https://github.com/hyperledger/fabric/releases/download/v2.2.2/hyperledger-fabric-linux-amd64-2.2.2.tar.gz | sudo tar xzf - -C /opt/fabric
      curl -sSL https://github.com/hyperledger/fabric-ca/releases/download/v1.4.9/hyperledger-fabric-ca-linux-amd64-1.4.9.tar.gz | sudo tar xzf - -C /opt/fabric
      cd builders/java
      sudo mvn -q dependency:copy-dependencies -DoutputDirectory=/opt/fabric-chaincode-java/lib
      npm install -g fabric-shim@2.2.0
    displayName: Install Fabric dependencies
  - script: make lint
    displayName: Run Go formatters and linters
  - script: make unit
    displayName: Run Go unit tests
  - script: |
      set -euo pipefail
      export PATH="/opt/fabric/bin:${PATH}"
      export FABRIC_CFG_PATH=/opt/fabric/config
      make integration
    displayName: Run Go integration tests
  - script: shellcheck builders/*/bin/*
    displayName: Run ShellCheck
  - script: |
      set -euo pipefail
      docker build -t ibmcom/ibp-microfab:latest .
    displayName: Build Docker image
  - task: HCLAppScan@1
    inputs:
      AppSecTestService: "HCL AppScan on Cloud"
      applications: "85393290-6bab-43e2-8203-be3ba50246fa"
      scantype: "static"
    displayName: Run HCL AppScan on Cloud
    condition: eq(variables['Build.Reason'], 'Schedule')
  - script: |
      set -euo pipefail
      VERSION=$(git describe --exact-match --tags $(Build.SourceVersion) | sed 's/^v//')
      docker tag ibmcom/ibp-microfab:latest ibmcom/ibp-microfab:${VERSION}
      docker login -u $(Docker Hub User Name) -p $(Docker Hub Access Token)
      docker push ibmcom/ibp-microfab:${VERSION}
      docker push ibmcom/ibp-microfab:latest
    displayName: Publish Docker image to Docker Hub
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
